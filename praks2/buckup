#!/bin/bash
# Lihtne varukoopia skript (.tar.zst)
# 1) Varukoopia loomine (--exclude lisatud)
# 2) Arhiivi kontrollimine
# 3) Varukoopia suuruse kuvamine
# 4) Ainult viimased koopiad (3 tk jäetakse alles)
# 5) Failide ja kaustade välistamine (.jpg ja bin)
# 6) „Kuiv jooks“ – näita, mis läheks arhiivi, ilma et faili tegelikult luuakse
# 7) Logimine – salvestab alguse ja lõpu backup.log faili

set -o errexit
set -o nounset
set -o pipefail

# Lähte- ja sihtkaustad
SRC_DIR=~/skriptlinux/praks2/src
BACKUP_DIR=~/skriptlinux/praks2/backup
LOG_DIR=~/skriptlinux/praks2/logs
LOG_FILE="$LOG_DIR/backup.log"

# Failinimi koos kuupäeva ja kellaajaga
DATE=$(date +%F_%H%M%S)
BACKUP_FILE="$BACKUP_DIR/src-$DATE.tar.zst"

# Loo vajalikud kaustad
mkdir -p "$BACKUP_DIR" "$LOG_DIR"

# --- (6) KUIVJOOKS (Dry Run) ---
if [[ "${1:-}" == "dry" ]]; then
    echo "KUIVJOOKS: Näitan, mis failid läheks arhiivi (arhiivi ei looda)."
    echo
    echo "Arhiiv sisaldaks järgmisi faile ja kaustu:"
    tar -cf - \
        --exclude='*.jpg' \
        --exclude='bin' \
        -C "$(dirname "$SRC_DIR")" "$(basename "$SRC_DIR")" \
        | tar -tvf -
    echo
    echo "Kuiv jooks lõpetatud — uut faili ei loodud."
    exit 0
fi

# --- (7) LOGIMINE: algus ---
printf "[ %s ] BACKUP START\n" "$(date '+%F %T')" >> "$LOG_FILE"

# --- (1) VARUKOOPIA LOOMINE ---
echo "Loon varukoopia: $BACKUP_FILE"
tar -I 'zstd -19 -T0' -cf "$BACKUP_FILE" \
    --exclude='*.jpg' \
    --exclude='bin' \
    -C "$(dirname "$SRC_DIR")" "$(basename "$SRC_DIR")"

if [ -f "$BACKUP_FILE" ]; then
    echo "Varukoopia loodud: $BACKUP_FILE"
else
    echo "Viga: varukoopia loomine ebaõnnestus."
    printf "[ %s ] BACKUP FAILED\n" "$(date '+%F %T')" >> "$LOG_FILE"
    exit 1
fi

# --- (2) ARHIIVI KONTROLLIMINE ---
echo
echo "Kontrollin arhiivi sisu (esimesed 5 rida):"
if ! tar -I 'zstd -d' -tf "$BACKUP_FILE" | head -n 5; then
    echo "Viga: arhiivi avamine ebaõnnestus."
    printf "[ %s ] BACKUP FAILED\n" "$(date '+%F %T')" >> "$LOG_FILE"
    exit 1
fi

if tar -I 'zstd -d' -tf "$BACKUP_FILE" | grep -qE '^src/.+/$'; then
    echo "Arhiiv sisaldab alamkaustu."
else
    echo "Hoiatus: ei leidnud alamkaustu arhiivis."
fi

# --- (3) VARUKOOPIA SUURUS ---
echo
echo "Arhiivi suurus:"
ARCHIVE_SIZE=$(du -h "$BACKUP_FILE" | awk '{print $1}')
echo "$ARCHIVE_SIZE"

# --- (4) AINULT VIIMASED KOOPIAD ---
echo
echo "Puhastan vanu varukoopiaid (alles jäävad ainult 3 kõige uuemat)..."
cd "$BACKUP_DIR"
ls -1t *.tar.zst 2>/dev/null | tail -n +4 | xargs -r rm -f
echo "Alles jäid järgmised failid:"
ls -1t *.tar.zst || echo "(ühtegi varukoopiat pole)"

# --- (5) FAILIDE JA KAUSTADE VÄLISTAMISE KONTROLL ---
echo
echo "Kontrollin, et arhiivis poleks välistatud faile:"
if tar -I 'zstd -d' -tf "$BACKUP_FILE" | grep -qE '\.jpg$'; then
    echo "Arhiivis on .jpg faile — välistamine ei toiminud!"
else
    echo "Ühtegi .jpg faili ei leitud."
fi

if tar -I 'zstd -d' -tf "$BACKUP_FILE" | grep -qE '^src/bin/'; then
    echo "Arhiivis on bin/ kaust — välistamine ei toiminud!"
else
    echo "Kaust 'bin/' jäeti edukalt välja."
fi

# --- (7) LOGIMINE: lõpp ---
printf "[ %s ] BACKUP END (file: %s, size: %s)\n" \
    "$(date '+%F %T')" "$(basename "$BACKUP_FILE")" "$ARCHIVE_SIZE" >> "$LOG_FILE"

echo
echo "Logi salvestatud faili: $LOG_FILE"
